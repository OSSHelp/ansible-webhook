---

- name: create group
  group:
    name: "{{ webhook_user }}"
    system: yes
    state: present

- name: create user
  user:
    name: "{{ webhook_user }}"
    group: "{{ webhook_user }}"
    groups: "{{ webhook_extra_groups }}"
    shell: "/bin/bash"
    system: yes
    comment: "Webhook user"
    state: present

- name: create binary dir if necesary
  file:
    path: "{{ webhook_dirs.binary }}"
    state: directory

- name: create logs dir if necesary
  file:
    path: "{{ webhook_dirs.logs }}"
    state: directory
    owner: "root"
    group: "{{ webhook_user }}"
    mode: 0770

- name: download binary
  get_url:
    url: "{{ webhook_download.url }}"
    checksum: "sha256:{{ webhook_download.checksum }}"
    dest: "{{ webhook_dirs.binary }}/webhook"
    owner: "root"
    group: "root"
    mode: 0755
  when: not ansible_check_mode
  notify: restart webhook service

- name: create conf dir if necessary
  file:
    path: "{{ webhook_dirs.conf }}"
    state: directory
    owner: "root"
    group: "{{ webhook_user }}"
    mode: 0750

- name: prepare variables for main cfg generation
  set_fact:
    webhooks_merged: "{{ webhook_custom_hooks }}"
  when: webhook_disable_default_hooks

- name: prepare variables for main cfg generation
  set_fact:
    webhooks_merged: "{{ webhook_default_hooks + webhook_custom_hooks }}"
  when: not webhook_disable_default_hooks

- name: generate hooks
  template:
    src: webhooks.j2
    dest: "{{ webhook_dirs.conf }}/webhooks.json"
    owner: root
    group: "{{ webhook_user }}"
    mode: 0640
  notify: restart webhook service

- name: copy scripts
  template:
    src: '{{ webhook_dirs.scripts_source }}/webhook-{{ item }}.j2'
    dest: "{{ webhook_dirs.scripts }}/webhook-{{ item | basename }}"
    owner: root
    group: "{{ webhook_user }}"
    mode: 0750
  when: webhook_params.scripts is defined and webhook_params.scripts | length > 0
  with_items: "{{ webhook_params.scripts }}"
  notify: restart webhook service

- name: include deploy-functions
  include_role:
    name: deploy-functions
  when: webhook_default_setup and deploy_functions_installed is not defined

- name: create tpl directory
  file:
    path: "{{ webhook_dirs.templates }}"
    state: directory
    owner: "root"
    group: "{{ webhook_user }}"
    mode: 0750
  when: webhook_default_setup

- name: place initial-setup script
  template:
    src: initial-setup.j2
    dest: "{{ webhook_dirs.templates }}/initial-setup"
    owner: "root"
    group: "{{ webhook_user }}"
    mode: 0750
  when: webhook_default_setup

- name: copy templates
  copy:
    src: "templates/{{ item }}"
    dest: "{{ webhook_dirs.templates }}/{{ item | basename }}"
    owner: root
    group: "{{ webhook_user }}"
    mode: 0750
  when: webhook_default_setup and webhook_templates
  with_items: "{{ webhook_templates }}"

- name: copy systemd unit file
  template:
    src: systemd-unit.j2
    dest: "/etc/systemd/system/webhook.service"
    owner: root
    group: root
    mode: 0644
  notify:
    - reload webhook unit
    - restart webhook service

- name: enable service
  service:
    name: webhook
    state: started
    enabled: yes

- name: install sudoers config
  template:
    src: sudoers.j2
    dest: "/etc/sudoers.d/{{ webhook_user }}"
    owner: root
    group: root
    mode: 0440
  when: webhook_default_sudoers
